// Copyright 2022 ByteDance and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package monolith.native_training.data;

message FilterByFidConfig {
  repeated uint64 has_fids = 1;
  repeated uint64 filter_fids = 2;
  repeated uint64 select_fids = 3;
}

message FilterByActionConfig {
  repeated int32 has_actions = 1;
}

message AddLabelConfig {
  message TaskLabelConfig {
    repeated int32 pos_actions = 1;
    repeated int32 neg_actions = 2;
    optional float sample_rate = 3 [default = 1.0];
  }

  repeated TaskLabelConfig task_label_configs = 1;
  optional float negative_value = 2 [default = 0.0];
  optional float new_sample_rate = 3 [default = 1.0];
}

message FilterByLabelConfig {
  repeated float thresholds = 1;
}

message FilterByValueConfig {
  required string field_name = 1;
  required string op = 2;
  repeated float float_operand = 3;
  repeated int64 int_operand = 4;
  repeated string string_operand = 5;
  optional bool keep_empty = 6 [default = false];
  optional string operand_filepath = 7 [default = ""];
}

message BasicTransformConfig {
  oneof type {
    FilterByFidConfig filter_by_fid = 1;
    FilterByActionConfig filter_by_action = 2;
    FilterByLabelConfig filter_by_label = 3;
    AddLabelConfig add_label = 4;
    FilterByValueConfig filter_by_value = 5;
  }
}

message LogicalOrTransformConfig {
  required BasicTransformConfig x = 1;
  required BasicTransformConfig y = 2;
}

message TransformConfig {
  message OneTransformConfig {
    oneof type {
      BasicTransformConfig basic_config = 1;
      LogicalOrTransformConfig logical_or_config = 2;
    }
  }

  repeated OneTransformConfig configs = 1;
}


